3.1.1 Centralized store for user information
The Framework MUST be capable of capturing information form the software tools specified in Table 3.9.3-A. The data captured SHOULD be stored in a centralized data store. The Framework MAY decide whether the information should be stored as Entities or Associates.
The data capturing and archiving mechanisms MAY resemble the following.
3.1.1.1 Type of Information: Personnel
Mechanism:
i. The Address Book is used to create Entities under the category “People” (Category names are user definable. However, a certain set of categories like People, Email etc. MAY need to always be present).
ii. User SHOULD be able to modify, add, delete or group these Entities by navigating to a virtual folder (e.g. /People/).
3.1.1.2 Type of Information: Email (Outbound)
Mechanism:
i. The email is intercepted before it is dispatched to the SMTP server.
ii. An Associate is created to contain the message body.
iii. The recipient name(s) are used to create (if required) Entities under the People category. The Associate is then linked to each Entity.
3.1.2 Hierarchical view of the information
The user MUST be able to view the information in the central store in a hierarchical manner that makes sense to him. Section 3.1.1 describes how this hierarchy is built up. The Framework SHOULD include a browser that is capable of displaying this hierarchy in a UI similar to that of the Windows Explorer. The browser MAY OPTIONALLY be integrated directly in to Windows Explorer, rather than being a standalone application.
This browser MAY integrate the GUI described in section 3.1.1.5 as well.